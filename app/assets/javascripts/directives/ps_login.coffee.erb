####################################################
# <ps-login>
ps.directive 'psLogin', ["$timeout", "$routeParams", "$location", "User", ($timeout, $routeParams, $location, User) ->
	directiveDefinitionObject =
		restrict: 'E'
		scope:
			app: '='
		templateUrl: "<%= asset_path('directives/ps_login.html') %>"

		link: (scope, element, attrs) ->
			scope.credentials = {loginType: attrs.loginType}
			scope.usernameTaken = true


			scope.$watch 'credentials.loginType', (value) ->
				el = element.find(".#{value} input")[0]
				if el? then el.focus()

			scope.$watch 'credentials.login', (value) ->
				if value? and value.match(///^[a-zA-Z][a-zA-Z0-9-]*$///)?
					scope.credentials.username = value
					scope.credentials.email = ''
				else
					scope.credentials.email = value
					scope.credentials.username = ''

			scope.checkLogin = () ->
				# TODO: make the loginType change less eratic, maybe don't auto change the form at all. See tumblr
				# TODO: prompt user to input email or username on forgot? failure to find account
				if registering = scope.credentials.loginType == 'register'
					login = scope.credentials.email
				else
					login = scope.credentials.login
				User.query
					login: login
					publishable: false
					endorsed: false
					visible: false
					(data) ->
						if data.collection.length > 0 and registering
							scope.credentials.loginType = 'login'
							scope.credentials.login = login
							scope.app.flash 'info', "Looks like you already have an account. Go ahead and log in."
							$timeout () ->
								if _.isEmpty(scope.credentials.login)
									element.find('#login').focus()
								else
									element.find('#lgn_password').focus()
							, 100
						else if data.collection.length == 0 and !registering
							scope.credentials.loginType = 'register'
							scope.app.flash 'info', "Looks like you need an account. Go ahead and start one."
							$timeout () ->
								if _.isEmpty(scope.credentials.email)
									element.find('#reg_email').focus()
								else
									element.find('#reg_password').focus()
							, 100

			scope.checkUsername = (username = scope.credentials.username) ->
				if scope.credentials.loginType == 'register'
					User.query
						username: username
						publishable: false
						endorsed: false
						(data) ->
							if data.collection.length > 0 and scope.credentials.loginType == 'register'
								scope.usernameTaken = false
							else
								scope.usernameTaken = true
				else
					scope.usernameTaken = true

			scope.login = () ->
				# TODO: why does ngModel only update on the scope when the field is valid?
				if scope.credentials.loginType == 'register'
					scope.registeringPsw = true
					User.register
						user:
							email: element.find("#reg_email").val()
							password: element.find("#reg_password").val()
							username: element.find("#reg_username").val()
						(data) ->
							scope.registeringPsw = false
							# scope.app.loadCurrentUser data
							scope.app.loadCurrentUser()
							scope.credentials = {loginType: 'login'}
							scope.app.flash 'success', "Welcome. Let's create your Space."
							if $routeParams.path?
								$location.search(unescape($routeParams.search or '').replace('?', ''))
								$location.path($routeParams.path)
							else
								$location.path("/#{data.slug}/start")
							analytics.track 'sign up success',
								type: 'form'
								href: window.location.href
						(error) ->
							scope.registeringPsw = false
							scope.app.flash 'error', error.data.errors
							analytics.track 'sign up error',
								type: 'form'
								href: window.location.href
								error: JSON.stringify(error)
				else
					scope.loggingInPsw = true
					User.login
						user:
							login: element.find("#lgn_login").val()
							password: element.find("#lgn_password").val()
							# remember_me: rememberMe
						(data) ->
							scope.loggingInPsw = false
							# scope.app.loadCurrentUser data
							scope.app.loadCurrentUser()
							scope.credentials = {loginType: 'login'}
							scope.app.flash 'success', "Welcome back!"
							if $routeParams.path?
								$location.search(unescape($routeParams.search or '').replace('?', ''))
								$location.path($routeParams.path)
							else
								$location.path("/conversations")
							analytics.track 'sign in success',
								type: 'form'
								href: window.location.href
						(error) ->
							scope.loggingInPsw = false
							# TODO: put error on input field
							scope.app.flash 'error', "Oops, that's the wrong password."
							$input = element.find('#lgn_password')
							$input.focus()
							$input.addClass('animated shake')
							$timeout () ->
								$input.removeClass('shake')
							,1000
							analytics.track 'sign in error',
								type: 'form'
								href: window.location.href
								error: JSON.stringify(error)

			scope.fbLogin = () ->
				scope.loggingInFb = true
				FB.login ((response) ->
					if response.authResponse
						$.get '/users/auth/facebook/callback', { signed_request: response.authResponse.signedRequest }, (data) ->
							scope.loggingInFb = false
							# scope.app.loadCurrentUser data
							scope.app.loadCurrentUser()
							scope.app.flash 'success', "Welcome!"
							if $routeParams.path?
								$location.search(unescape($routeParams.search or '').replace('?', ''))
								$location.path($routeParams.path)
							else
								$location.path("/#{data.username}")
							analytics.track 'connect with facebook success',
								type: 'form'
								href: window.location.href
					else
						scope.loggingInFb = false
						scope.app.flash 'error', "Sorry, we had trouble contacting facebook. Please try again."
						analytics.track 'connect with facebook error',
							type: 'form'
							href: window.location.href
				),
					scope: "email"

	return directiveDefinitionObject
]
