ps.controller "AppCtrl", ["$scope", "$timeout", "$rootScope", "$q", "$location", "User", ($scope, $timeout, $rootScope, $q, $location, User) ->

    #####################
    # App Initialization
    #

    $scope.app = {}
    $scope.app.meta = {}
    $scope.app.alerts = {}
    $scope.app.currentUser = {}
    $scope.app.dcu = $q.defer() # Defered Current User
    $scope.app.year = (new Date).getFullYear()
    $scope.app.templates =
        loading:
            url: "<%= asset_path('app/loading.html') %>"
        header:
            url: "<%= asset_path('app/header.html') %>"
            classes: "navbar"
        flash:
            url: "<%= asset_path('app/flash.html') %>"
        footer:
            url: "<%= asset_path('app/footer.html') %>"
    $scope.app.show =
        loading: false
        focus: false
        header: true
        footer: true
        headerDropdown: false
        headerDropdownToggle: false

    # Style count in favicon
    Tinycon.setOptions
        width: 7
        height: 9
        font: '10px arial'
        color: '#ffffff'
        background: '#00C0FF'
        fallback: true

    # Add CSRF to all jQuery ajax
    $("body").bind "ajaxSend", (elm, xhr, s) ->
        $.rails.CSRFProtection(xhr) if s.type is "POST"

    $scope.app.identify = (user) ->
        analytics.identify user.id,
            name                      : user.name
            slug                      : user.slug
            body                      : user.body
            email                     : user.email
            locale                    : user.locale
            gender                    : user.gender
            username                  : user.username
            location                  : user.location
            birthday                  : user.birthday
            timezone                  : user.timezone
            lastName                  : user.last_name
            firstName                 : user.first_name
            created                   : user.created_at
            createdAt                 : user.created_at
            updated                   : user.updated_at
            updatedAt                 : user.updated_at
            facebookId                : user.facebook_id
            signInCount               : user.sign_in_count
            personalUrl               : user.personal_url
            lastSignInAt              : user.last_sign_in_at
            achievements              : JSON.stringify(user.achievements)
            readyConversationsCount   : user.ready_conversations_count
            endedConversationsCount   : user.ended_conversations_count
            waitingConversationsCount : user.waiting_conversations_count

    # TODO: bootstrap this data on the angular.html.haml template and only request it if no bootstrap is found
    $scope.app.loadCurrentUser = (userData = null) ->
        # Reset the defer everytime the user is reloaded
        $scope.app.dcu = $q.defer()

        $scope.app.dcu.promise.then (user) ->
            Tinycon.setBubble user.ready_conversations_count
            $scope.app.identify user

        if userData?
            $scope.app.currentUser = new User userData
            $scope.app.dcu.resolve(userData)
        else
            $scope.app.currentUser = User.current $scope.app.dcu.resolve, $scope.app.dcu.reject
    $scope.app.loadCurrentUser()

    $scope.app.loggedIn = ->
        !_.isEmpty($scope.app.currentUser)
    $scope.app.anyMessages = ->
        $scope.app.loggedIn() and $scope.app.currentUser.ready_conversations_count? and $scope.app.currentUser.ready_conversations_count > 0


    ########
    # Meta #
    ########
    $scope.app.meta.reset = ->
        $scope.app.meta.title = "Positive Space Â· Simply Converse"
        $scope.app.meta.description = "We believe that it's too hard to start a conversation with a stranger. A lot of good ideas and relationships are missed because the right people never talk. We let the people and content you care about come to you."
        $scope.app.meta.imageUrl = "<%= asset_path('+_.png') %>"
    $scope.app.meta.reset()

    #############
    # Hide/Show #
    #############
    $scope.app.show.allChrome = ->
        $scope.app.show.header = true
        $scope.app.show.footer = true
        $scope.app.show.focus = false

    $scope.app.show.noChrome = ->
        $scope.app.show.header = false
        $scope.app.show.footer = false
        $scope.app.show.focus = true


    ###################
    # On Route Change #
    ###################
    $rootScope.$on "$routeChangeStart", (event, next, current) ->
        # Reset the meta tags
        $scope.app.meta.reset()

        # Make sure the chrome is visible
        $scope.app.show.allChrome()

        # Identify the user
        $scope.app.dcu.promise.then (user) ->
            $scope.app.identify user

        # Track a pageview
        analytics.pageview()
        analytics.track 'page viewed',
            href: window.location.href
            page: $location.path()

        # Autosize all textareas
        # $timeout (() -> $('textarea').autosize()), 1000

    #
    # End Initialization
    #####################


    #########
    # Flash #
    #########
    $scope.app.flash = (type, msg, options={}) ->
        key = options.key or null
        sticky = if options.sticky == true then true else false
        clearAll = if options.clearAll == false then false else true

        if clearAll then $scope.app.alerts = {}

        if _.isString(msg)
            if key? then msg = [key, msg].join(" ")
            id = _.uniqueId('flash_')
            $scope.app.alerts[id] = {type: "#{type} animated fadeInRightBig", msg: msg}
            # rm animated styles once it's loaded - they cause it to reanimate when another alert is deleted
            $timeout () ->
                if $scope.app.alerts[id]?
                    $scope.app.alerts[id].type = $scope.app.alerts[id].type.split(" ")[0]
            ,1000
            # auto close the alert after a bit of time
            unless sticky
                time = 2222 + (111 * msg.length) + (2000 * _.keys($scope.app.alerts).length)
                $timeout () ->
                    $scope.app.closeAlert(id, true)
                ,time
        else if _.isArray(msg)
            _.each msg, (m, i) ->
                $scope.app.flash(type, m, {key: key, clearAll: false})
        else if _.isObject(msg)
            i = 0
            _.each msg, (v, k) ->
                $timeout () ->
                    $scope.app.flash(type, v, {key: k, clearAll: false})
                , 300*i
                i += 1

    $scope.app.closeAlert = (id, fade=false) ->
        if $scope.app.alerts[id]?
            type = $scope.app.alerts[id].type.split(" ")[0]
            $scope.app.alerts[id].type = "#{type} animated fadeOut"
            if fade
                $timeout () ->
                    delete $scope.app.alerts[id]
                ,444
            else
                delete $scope.app.alerts[id]


    #############
    # User Auth #
    #############
    $scope.app.logout = ->
        User.logout ->
            $scope.app.show.loading = true
            analytics.track 'logout success'
            $timeout ->
                # IDK why, but we must reload the page on logout.
                # Otherwise the user will not get saved in the session on the next login.
                window.location.reload()
            ,500

    $scope.app.resetPassword = (login) ->
        # TODO: handle the reset password link page in angular
        $scope.app.show.loading = true
        User.resetPassword
            user:
                login: login
            (data) ->
                $scope.app.show.loading = false
                $scope.app.flash 'info', "Check your inbox (including your spam folder) for password reset instructions. The email should arrive in less than a minute.", {sticky: true}
                analytics.track 'request reset password success'
            (error) ->
                $scope.app.show.loading = false
                $scope.app.flash 'error', "Sorry, that <em>email address or username</em> is not registered with us. Please try again or <a href='/register' class='unfancy-link'>request a new account</a>."
                $input = $('input.forgot-password:visible')
                $input.focus()
                $input.addClass('animated shake')
                $timeout () ->
                    $input.removeClass('shake')
                ,1000
                analytics.track 'request reset password error',
                    error: JSON.stringify(error)

    ################
    # Random Space #
    ################
    $scope.app.randomSpace = ->
        $scope.app.show.loading = true
        User.query {per: 1, order: 'RANDOM()', has_space: true}, (users) ->
            $scope.app.show.loading = false
            $location.path("/#{users[0].slug}")

]

